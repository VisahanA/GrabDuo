{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/visah/Documents/GitHub/GrabDuo/src/app/api/test-ocr/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const formData = await request.formData();\r\n    const file = formData.get('file') as File;\r\n    \r\n    if (!file) {\r\n      return NextResponse.json(\r\n        { error: 'No file provided' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Simulate OCR processing delay\r\n    await new Promise(resolve => setTimeout(resolve, 1000));\r\n\r\n    // Return mock OCR result\r\n    const mockOCRResult = {\r\n      success: true,\r\n      text: `Shopping List\\n- Milk\\n- Bread\\n- Eggs\\n- Bananas\\n- Tomatoes\\n- Cheese\\n- Chicken\\n- Rice`,\r\n      confidence: 0.95,\r\n      filename: file.name,\r\n      size: file.size,\r\n      type: file.type\r\n    };\r\n\r\n    return NextResponse.json(mockOCRResult);\r\n  } catch (error) {\r\n    console.error('Test OCR Error:', error);\r\n    return NextResponse.json(\r\n      { error: 'Test OCR processing failed' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\nexport async function GET() {\r\n  return NextResponse.json({\r\n    message: 'Test OCR endpoint is working',\r\n    endpoints: {\r\n      POST: '/api/test-ocr - Upload image file for OCR processing'\r\n    }\r\n  });\r\n} "],"names":[],"mappings":";;;;AAAA;;AAEO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,WAAW,MAAM,QAAQ,QAAQ;QACvC,MAAM,OAAO,SAAS,GAAG,CAAC;QAE1B,IAAI,CAAC,MAAM;YACT,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAmB,GAC5B;gBAAE,QAAQ;YAAI;QAElB;QAEA,gCAAgC;QAChC,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;QAEjD,yBAAyB;QACzB,MAAM,gBAAgB;YACpB,SAAS;YACT,MAAM,CAAC,0FAA0F,CAAC;YAClG,YAAY;YACZ,UAAU,KAAK,IAAI;YACnB,MAAM,KAAK,IAAI;YACf,MAAM,KAAK,IAAI;QACjB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mBAAmB;QACjC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA6B,GACtC;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe;IACpB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QACvB,SAAS;QACT,WAAW;YACT,MAAM;QACR;IACF;AACF","debugId":null}}]
}