{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/visah/Documents/GitHub/GrabDuo/src/app/badge.ts"],"sourcesContent":["export type BadgeType =\r\n  | \"Organic\"\r\n  | \"Fresh\"\r\n  | \"Bakery\"\r\n  | \"Protein\"\r\n  | \"Ready to eat\"\r\n  | \"Snacks\"\r\n  | \"Beverages\"\r\n  | \"Traditional\"\r\n  | \"Spicy\"\r\n  | \"Sweet\"\r\n  | \"Dairy\"\r\n  | \"Grains\"\r\n  | \"Vegetables\"\r\n  | \"Fruits\"\r\n  | \"Biscuits\"\r\n  | \"Other\"\r\n  | \"Meat\"\r\n  | \"Sweets\"\r\n  | \"Cereals\";\r\n\r\nexport interface Badge {\r\n  type: BadgeType;\r\n  bgColor: string;\r\n  textColor: string;\r\n}\r\n\r\nexport const badges: Record<BadgeType, Badge> = {\r\n  Organic: {\r\n    type: \"Organic\",\r\n    bgColor: \"bg-green-100\",\r\n    textColor: \"text-green-800\",\r\n  },\r\n  Fresh: {\r\n    type: \"Fresh\",\r\n    bgColor: \"bg-blue-100\",\r\n    textColor: \"text-blue-800\",\r\n  },\r\n  Bakery: {\r\n    type: \"Bakery\",\r\n    bgColor: \"bg-orange-100\",\r\n    textColor: \"text-orange-800\",\r\n  },\r\n  Protein: {\r\n    type: \"Protein\",\r\n    bgColor: \"bg-purple-100\",\r\n    textColor: \"text-purple-800\",\r\n  },\r\n  \"Ready to eat\": {\r\n    type: \"Ready to eat\",\r\n    bgColor: \"bg-yellow-100\",\r\n    textColor: \"text-yellow-800\",\r\n  },\r\n  Snacks: {\r\n    type: \"Snacks\",\r\n    bgColor: \"bg-red-100\",\r\n    textColor: \"text-red-800\",\r\n  },\r\n  Beverages: {\r\n    type: \"Beverages\",\r\n    bgColor: \"bg-cyan-100\",\r\n    textColor: \"text-cyan-800\",\r\n  },\r\n  Traditional: {\r\n    type: \"Traditional\",\r\n    bgColor: \"bg-amber-100\",\r\n    textColor: \"text-amber-800\",\r\n  },\r\n  Spicy: {\r\n    type: \"Spicy\",\r\n    bgColor: \"bg-rose-100\",\r\n    textColor: \"text-rose-800\",\r\n  },\r\n  Sweet: {\r\n    type: \"Sweet\",\r\n    bgColor: \"bg-pink-100\",\r\n    textColor: \"text-pink-800\",\r\n  },\r\n  Dairy: {\r\n    type: \"Dairy\",\r\n    bgColor: \"bg-indigo-100\",\r\n    textColor: \"text-indigo-800\",\r\n  },\r\n  Grains: {\r\n    type: \"Grains\",\r\n    bgColor: \"bg-yellow-100\",\r\n    textColor: \"text-yellow-800\",\r\n  },\r\n  Vegetables: {\r\n    type: \"Vegetables\",\r\n    bgColor: \"bg-green-100\",\r\n    textColor: \"text-green-800\",\r\n  },\r\n  Fruits: {\r\n    type: \"Fruits\",\r\n    bgColor: \"bg-orange-100\",\r\n    textColor: \"text-orange-800\",\r\n  },\r\n  Biscuits: {\r\n    type: \"Biscuits\",\r\n    bgColor: \"bg-amber-100\",\r\n    textColor: \"text-amber-800\",\r\n  },\r\n  Other: {\r\n    type: \"Other\",\r\n    bgColor: \"bg-gray-100\",\r\n    textColor: \"text-gray-800\",\r\n  },\r\n  Meat: {\r\n    type: \"Meat\",\r\n    bgColor: \"bg-red-100\",\r\n    textColor: \"text-red-800\",\r\n  },\r\n  Sweets: {\r\n    type: \"Sweets\",\r\n    bgColor: \"bg-pink-100\",\r\n    textColor: \"text-pink-800\",\r\n  },\r\n  Cereals: {\r\n    type: \"Cereals\",\r\n    bgColor: \"bg-amber-100\",\r\n    textColor: \"text-amber-800\",\r\n  },\r\n};\r\n\r\nexport const getBadgeStyles = (badgeType: BadgeType): string => {\r\n  const badge = badges[badgeType];\r\n  return `${badge.bgColor} ${badge.textColor}`;\r\n};\r\n"],"names":[],"mappings":";;;;AA2BO,MAAM,SAAmC;IAC9C,SAAS;QACP,MAAM;QACN,SAAS;QACT,WAAW;IACb;IACA,OAAO;QACL,MAAM;QACN,SAAS;QACT,WAAW;IACb;IACA,QAAQ;QACN,MAAM;QACN,SAAS;QACT,WAAW;IACb;IACA,SAAS;QACP,MAAM;QACN,SAAS;QACT,WAAW;IACb;IACA,gBAAgB;QACd,MAAM;QACN,SAAS;QACT,WAAW;IACb;IACA,QAAQ;QACN,MAAM;QACN,SAAS;QACT,WAAW;IACb;IACA,WAAW;QACT,MAAM;QACN,SAAS;QACT,WAAW;IACb;IACA,aAAa;QACX,MAAM;QACN,SAAS;QACT,WAAW;IACb;IACA,OAAO;QACL,MAAM;QACN,SAAS;QACT,WAAW;IACb;IACA,OAAO;QACL,MAAM;QACN,SAAS;QACT,WAAW;IACb;IACA,OAAO;QACL,MAAM;QACN,SAAS;QACT,WAAW;IACb;IACA,QAAQ;QACN,MAAM;QACN,SAAS;QACT,WAAW;IACb;IACA,YAAY;QACV,MAAM;QACN,SAAS;QACT,WAAW;IACb;IACA,QAAQ;QACN,MAAM;QACN,SAAS;QACT,WAAW;IACb;IACA,UAAU;QACR,MAAM;QACN,SAAS;QACT,WAAW;IACb;IACA,OAAO;QACL,MAAM;QACN,SAAS;QACT,WAAW;IACb;IACA,MAAM;QACJ,MAAM;QACN,SAAS;QACT,WAAW;IACb;IACA,QAAQ;QACN,MAAM;QACN,SAAS;QACT,WAAW;IACb;IACA,SAAS;QACP,MAAM;QACN,SAAS;QACT,WAAW;IACb;AACF;AAEO,MAAM,iBAAiB,CAAC;IAC7B,MAAM,QAAQ,MAAM,CAAC,UAAU;IAC/B,OAAO,GAAG,MAAM,OAAO,CAAC,CAAC,EAAE,MAAM,SAAS,EAAE;AAC9C","debugId":null}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/visah/Documents/GitHub/GrabDuo/src/app/cart/CartModal.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { getBadgeStyles } from \"../badge\";\r\nimport { useCart } from \"./CartContext\";\r\n\r\ninterface CartModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nexport default function CartModal({ isOpen, onClose }: CartModalProps) {\r\n  const {\r\n    items,\r\n    totalItems,\r\n    totalPrice,\r\n    updateQuantity,\r\n    removeItem,\r\n    clearCart,\r\n  } = useCart();\r\n\r\n  const handleQuantityChange = (id: number, newQuantity: number) => {\r\n    if (newQuantity <= 0) {\r\n      removeItem(id);\r\n    } else {\r\n      updateQuantity(id, newQuantity);\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex justify-end\">\r\n      <div className=\"bg-green-50 w-full max-w-md h-full overflow-y-auto\">\r\n        {/* Header */}\r\n        <div className=\"sticky top-0 bg-white border-b border-gray-200 p-4 shadow-sm\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <h2 className=\"text-xl font-bold text-gray-900\">\r\n              Shopping Cart\r\n            </h2>\r\n            <button\r\n              onClick={onClose}\r\n              className=\"p-2 hover:bg-gray-100 rounded-full transition-colors\"\r\n            >\r\n              <svg\r\n                className=\"w-6 h-6 text-gray-600\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                viewBox=\"0 0 24 24\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M6 18L18 6M6 6l12 12\"\r\n                />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Cart Content */}\r\n        <div className=\"p-4\">\r\n          {items.length === 0 ? (\r\n            /* Empty Cart */\r\n            <div className=\"text-center py-12\">\r\n              <div className=\"text-gray-400 mb-4\">\r\n                <svg\r\n                  className=\"w-16 h-16 mx-auto mb-4\"\r\n                  fill=\"none\"\r\n                  stroke=\"currentColor\"\r\n                  viewBox=\"0 0 24 24\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={1.5}\r\n                    d=\"M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z\"\r\n                  />\r\n                </svg>\r\n              </div>\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\r\n                Your cart is empty\r\n              </h3>\r\n              <p className=\"text-gray-600\">\r\n                Add some products to your cart to see them here.\r\n              </p>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              {/* Cart Summary */}\r\n              <div className=\"bg-white rounded-lg shadow-sm border border-gray-100 p-4 mb-4\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <h3 className=\"text-lg font-semibold text-gray-900\">\r\n                      Cart Summary\r\n                    </h3>\r\n                    <p className=\"text-gray-600 text-sm\">\r\n                      {totalItems} item{totalItems > 1 ? 's' : ''} in your cart\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"text-right\">\r\n                    <p className=\"text-xl font-bold text-green-600\">\r\n                      S${totalPrice.toFixed(2)}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Cart Items */}\r\n              <div className=\"space-y-3 mb-4\">\r\n                {items.map((item) => (\r\n                  <div\r\n                    key={item.id}\r\n                    className=\"bg-white rounded-lg shadow-sm border border-gray-100 p-4\"\r\n                  >\r\n                    <div className=\"flex items-center gap-3\">\r\n                      {/* Product Visual */}\r\n                      <div\r\n                        className={`w-12 h-12 bg-gradient-to-br ${item.color} rounded-lg flex items-center justify-center flex-shrink-0`}\r\n                      >\r\n                        <div className=\"text-lg\">\r\n                          {item.icon}\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* Product Details */}\r\n                      <div className=\"flex-1 min-w-0\">\r\n                        <h4 className=\"font-semibold text-gray-900 text-sm mb-1\">\r\n                          {item.name}\r\n                        </h4>\r\n                        <span\r\n                          className={`inline-block px-2 py-1 text-xs font-medium rounded-full ${getBadgeStyles(item.badge)}`}\r\n                        >\r\n                          {item.badge}\r\n                        </span>\r\n                        <p className=\"text-green-600 font-bold text-sm mt-1\">\r\n                          {item.price} each\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Controls Row */}\r\n                    <div className=\"flex items-center justify-between mt-3\">\r\n                      {/* Quantity Controls */}\r\n                      <div className=\"flex items-center gap-1 bg-gray-50 rounded-lg p-1\">\r\n                        <button\r\n                          onClick={() => handleQuantityChange(item.id, item.quantity - 1)}\r\n                          className=\"w-6 h-6 flex items-center justify-center bg-green-100 text-green-700 rounded-md hover:bg-green-200 transition-colors flex-shrink-0\"\r\n                          title=\"Decrease quantity\"\r\n                        >\r\n                          <svg\r\n                            className=\"w-2.5 h-2.5\"\r\n                            fill=\"none\"\r\n                            stroke=\"currentColor\"\r\n                            viewBox=\"0 0 24 24\"\r\n                          >\r\n                            <path\r\n                              strokeLinecap=\"round\"\r\n                              strokeLinejoin=\"round\"\r\n                              strokeWidth={3}\r\n                              d=\"M20 12H4\"\r\n                            />\r\n                          </svg>\r\n                        </button>\r\n                        <span className=\"px-2 py-1 text-gray-900 font-bold text-xs min-w-[24px] text-center flex-shrink-0\">\r\n                          {item.quantity}\r\n                        </span>\r\n                        <button\r\n                          onClick={() => handleQuantityChange(item.id, item.quantity + 1)}\r\n                          className=\"w-6 h-6 flex items-center justify-center bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors flex-shrink-0\"\r\n                          title=\"Increase quantity\"\r\n                        >\r\n                          <svg\r\n                            className=\"w-2.5 h-2.5\"\r\n                            fill=\"none\"\r\n                            stroke=\"currentColor\"\r\n                            viewBox=\"0 0 24 24\"\r\n                          >\r\n                            <path\r\n                              strokeLinecap=\"round\"\r\n                              strokeLinejoin=\"round\"\r\n                              strokeWidth={3}\r\n                              d=\"M12 4v16m8-8H4\"\r\n                            />\r\n                          </svg>\r\n                        </button>\r\n                      </div>\r\n\r\n                      {/* Remove Button */}\r\n                      <button\r\n                        onClick={() => removeItem(item.id)}\r\n                        className=\"p-1.5 text-red-500 hover:bg-red-50 rounded-md transition-colors\"\r\n                        title=\"Remove from cart\"\r\n                      >\r\n                        <svg\r\n                          className=\"w-4 h-4\"\r\n                          fill=\"none\"\r\n                          stroke=\"currentColor\"\r\n                          viewBox=\"0 0 24 24\"\r\n                        >\r\n                          <path\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                            strokeWidth={2}\r\n                            d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1-1H8a1 1 0 00-1 1v3M4 7h16\"\r\n                          />\r\n                        </svg>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Footer with Actions */}\r\n        {items.length > 0 && (\r\n          <div className=\"sticky bottom-0 bg-white border-t border-gray-200 p-4 shadow-lg\">\r\n            <div className=\"space-y-3\">\r\n              <button className=\"w-full bg-green-600 text-white py-3 px-4 rounded-lg font-semibold hover:bg-green-700 transition-colors\">\r\n                Proceed to Checkout\r\n              </button>\r\n              <button\r\n                onClick={clearCart}\r\n                className=\"w-full bg-red-600 text-white py-2 px-4 rounded-lg font-medium hover:bg-red-700 transition-colors\"\r\n              >\r\n                Clear Cart\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 580, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/visah/Documents/GitHub/GrabDuo/src/app/products.ts"],"sourcesContent":["import { BadgeType } from \"./badge\";\r\n\r\nexport interface Product {\r\n  id: number;\r\n  name: string;\r\n  price: string;\r\n  badge: BadgeType;\r\n  color: string;\r\n  icon: string;\r\n  // Additional fields from integrated data\r\n  brands?: string;\r\n  unitQuantity?: string;\r\n  categories?: string;\r\n  countries?: string;\r\n  imageUrl?: string;\r\n  imageSmallUrl?: string;\r\n}\r\n\r\n// Basic products for initial load (keeping only essential items)\r\nexport const products: Product[] = [\r\n  // Fruits\r\n  {\r\n    id: 1,\r\n    name: \"Fresh Mango (Alphonso)\",\r\n    price: \"S$1.30/kg\",\r\n    badge: \"Fruits\",\r\n    color: \"from-yellow-300 to-orange-400\",\r\n    icon: \"🥭\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Sweet Guava\",\r\n    price: \"S$0.65/kg\",\r\n    badge: \"Fruits\",\r\n    color: \"from-green-200 to-green-400\",\r\n    icon: \"🍈\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Fresh Pomegranate\",\r\n    price: \"S$1.95/kg\",\r\n    badge: \"Fruits\",\r\n    color: \"from-red-300 to-red-500\",\r\n    icon: \"🍎\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Kesar Banana\",\r\n    price: \"S$0.95/dozen\",\r\n    badge: \"Fruits\",\r\n    color: \"from-yellow-200 to-yellow-400\",\r\n    icon: \"🍌\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Fresh Papaya\",\r\n    price: \"S$0.50/kg\",\r\n    badge: \"Fruits\",\r\n    color: \"from-orange-200 to-orange-400\",\r\n    icon: \"🍊\",\r\n  },\r\n\r\n  // Vegetables\r\n  {\r\n    id: 6,\r\n    name: \"Lady Finger (Bhindi)\",\r\n    price: \"S$0.65/kg\",\r\n    badge: \"Vegetables\",\r\n    color: \"from-green-300 to-green-500\",\r\n    icon: \"🥒\",\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"Brinjal (Baingan)\",\r\n    price: \"S$0.55/kg\",\r\n    badge: \"Vegetables\",\r\n    color: \"from-purple-300 to-purple-500\",\r\n    icon: \"🍆\",\r\n  },\r\n  {\r\n    id: 8,\r\n    name: \"Bitter Gourd (Karela)\",\r\n    price: \"S$0.75/kg\",\r\n    badge: \"Vegetables\",\r\n    color: \"from-green-400 to-green-600\",\r\n    icon: \"🥬\",\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"Bottle Gourd (Lauki)\",\r\n    price: \"S$0.40/kg\",\r\n    badge: \"Vegetables\",\r\n    color: \"from-green-200 to-green-400\",\r\n    icon: \"🥒\",\r\n  },\r\n  {\r\n    id: 10,\r\n    name: \"Drumstick (Moringa)\",\r\n    price: \"S$0.95/kg\",\r\n    badge: \"Vegetables\",\r\n    color: \"from-green-300 to-green-500\",\r\n    icon: \"🌿\",\r\n  },\r\n\r\n  // Beverages\r\n  {\r\n    id: 11,\r\n    name: \"Coca Cola 600ml\",\r\n    price: \"S$0.65\",\r\n    badge: \"Beverages\",\r\n    color: \"from-red-400 to-red-600\",\r\n    icon: \"🥤\",\r\n  },\r\n  {\r\n    id: 12,\r\n    name: \"Pepsi 600ml\",\r\n    price: \"S$0.65\",\r\n    badge: \"Beverages\",\r\n    color: \"from-blue-400 to-blue-600\",\r\n    icon: \"🥤\",\r\n  },\r\n  {\r\n    id: 13,\r\n    name: \"Thums Up 600ml\",\r\n    price: \"S$0.65\",\r\n    badge: \"Beverages\",\r\n    color: \"from-gray-600 to-gray-800\",\r\n    icon: \"🥤\",\r\n  },\r\n  {\r\n    id: 14,\r\n    name: \"Masala Chai\",\r\n    price: \"S$0.25/cup\",\r\n    badge: \"Beverages\",\r\n    color: \"from-amber-300 to-amber-500\",\r\n    icon: \"☕\",\r\n  },\r\n  {\r\n    id: 15,\r\n    name: \"Sweet Lassi\",\r\n    price: \"S$0.50\",\r\n    badge: \"Dairy\",\r\n    color: \"from-pink-200 to-pink-400\",\r\n    icon: \"🥛\",\r\n  },\r\n\r\n  // Biscuits\r\n  {\r\n    id: 16,\r\n    name: \"Parle-G Original\",\r\n    price: \"S$0.15\",\r\n    badge: \"Biscuits\",\r\n    color: \"from-yellow-200 to-yellow-400\",\r\n    icon: \"🍪\",\r\n  },\r\n  {\r\n    id: 17,\r\n    name: \"Monaco Salted Biscuits\",\r\n    price: \"S$0.25\",\r\n    badge: \"Biscuits\",\r\n    color: \"from-orange-200 to-orange-400\",\r\n    icon: \"🍪\",\r\n  },\r\n  {\r\n    id: 18,\r\n    name: \"Good Day Cashew\",\r\n    price: \"S$0.40\",\r\n    badge: \"Biscuits\",\r\n    color: \"from-amber-200 to-amber-400\",\r\n    icon: \"🍪\",\r\n  },\r\n  {\r\n    id: 19,\r\n    name: \"Oreo Cookies\",\r\n    price: \"S$0.55\",\r\n    badge: \"Biscuits\",\r\n    color: \"from-gray-600 to-gray-800\",\r\n    icon: \"🍪\",\r\n  },\r\n  {\r\n    id: 20,\r\n    name: \"Marie Gold Biscuits\",\r\n    price: \"S$0.50\",\r\n    badge: \"Biscuits\",\r\n    color: \"from-yellow-300 to-yellow-500\",\r\n    icon: \"🍪\",\r\n  },\r\n\r\n  // Snacks\r\n  {\r\n    id: 21,\r\n    name: \"Haldiram's Namkeen\",\r\n    price: \"S$0.75\",\r\n    badge: \"Snacks\",\r\n    color: \"from-yellow-400 to-orange-500\",\r\n    icon: \"🥨\",\r\n  },\r\n  {\r\n    id: 22,\r\n    name: \"Kurkure Masala Munch\",\r\n    price: \"S$0.35\",\r\n    badge: \"Snacks\",\r\n    color: \"from-orange-400 to-red-500\",\r\n    icon: \"🌽\",\r\n  },\r\n  {\r\n    id: 23,\r\n    name: \"Lay's Classic Salted\",\r\n    price: \"S$0.45\",\r\n    badge: \"Snacks\",\r\n    color: \"from-yellow-300 to-yellow-500\",\r\n    icon: \"🥔\",\r\n  },\r\n  {\r\n    id: 24,\r\n    name: \"Britannia Good Day\",\r\n    price: \"S$0.30\",\r\n    badge: \"Biscuits\",\r\n    color: \"from-orange-200 to-orange-400\",\r\n    icon: \"🍪\",\r\n  },\r\n  {\r\n    id: 25,\r\n    name: \"Amul Fresh Milk\",\r\n    price: \"S$0.85/ltr\",\r\n    badge: \"Dairy\",\r\n    color: \"from-blue-100 to-blue-300\",\r\n    icon: \"🥛\",\r\n  },\r\n];\r\n\r\n// Async function to load all products from API\r\nlet allProductsCache: Product[] | null = null;\r\n\r\nexport async function loadAllProducts(): Promise<Product[]> {\r\n  if (allProductsCache) {\r\n    return allProductsCache;\r\n  }\r\n\r\n  try {\r\n    const response = await fetch('/api/products');\r\n    if (!response.ok) {\r\n      throw new Error('Failed to load products');\r\n    }\r\n    const loadedProducts: Product[] = await response.json();\r\n    allProductsCache = loadedProducts;\r\n    return loadedProducts;\r\n  } catch (error) {\r\n    console.error('Error loading products:', error);\r\n    // Fallback to default products if API fails\r\n    return products;\r\n  }\r\n}\r\n\r\n// Helper function to get products by category\r\nexport function getProductsByCategory(category: BadgeType, productList: Product[] = products): Product[] {\r\n  return productList.filter(product => product.badge === category);\r\n}\r\n\r\n// Enhanced confidence-based search function\r\nexport function searchProducts(query: string, productList: Product[] = products): Product[] {\r\n  if (!query.trim()) return productList;\r\n  \r\n  const keywords = query.toLowerCase().trim().split(/\\s+/).filter(keyword => keyword.length > 0);\r\n  if (keywords.length === 0) return productList;\r\n  \r\n  const scoredProducts = productList.map(product => {\r\n    let totalScore = 0;\r\n    let maxPossibleScore = 0;\r\n    \r\n    // Define field weights (importance)\r\n    const fields = [\r\n      { content: product.name.toLowerCase(), weight: 40 }, // Name is most important\r\n      { content: product.brands?.toLowerCase() || '', weight: 25 }, // Brand is second\r\n      { content: product.badge.toLowerCase(), weight: 20 }, // Category is third\r\n      { content: product.categories?.toLowerCase() || '', weight: 10 }, // Categories\r\n      { content: product.unitQuantity?.toLowerCase() || '', weight: 3 }, // Quantity\r\n      { content: product.countries?.toLowerCase() || '', weight: 2 } // Countries least important\r\n    ];\r\n    \r\n    keywords.forEach(keyword => {\r\n      let keywordScore = 0;\r\n      let keywordMaxScore = 0;\r\n      \r\n      fields.forEach(field => {\r\n        if (!field.content) return;\r\n        \r\n        keywordMaxScore += field.weight;\r\n        \r\n        // Exact match in field (highest score)\r\n        if (field.content === keyword) {\r\n          keywordScore += field.weight * 1.0;\r\n        }\r\n        // Field starts with keyword (very high score)\r\n        else if (field.content.startsWith(keyword)) {\r\n          keywordScore += field.weight * 0.9;\r\n        }\r\n        // Field contains keyword as whole word (high score)\r\n        else if (field.content.includes(` ${keyword} `) || field.content.includes(`${keyword} `) || field.content.includes(` ${keyword}`)) {\r\n          keywordScore += field.weight * 0.8;\r\n        }\r\n        // Field contains keyword as substring (medium score)\r\n        else if (field.content.includes(keyword)) {\r\n          keywordScore += field.weight * 0.6;\r\n        }\r\n        // Fuzzy match - keyword contains part of field words or vice versa (low score)\r\n        else {\r\n          const fieldWords = field.content.split(/\\s+/).filter(word => word.length > 2);\r\n          const fuzzyMatch = fieldWords.some(word => {\r\n            // Check if keyword and word share significant overlap\r\n            if (keyword.length >= 3 && word.length >= 3) {\r\n              return keyword.includes(word.slice(0, Math.min(3, word.length))) ||\r\n                     word.includes(keyword.slice(0, Math.min(3, keyword.length))) ||\r\n                     keyword.includes(word.slice(-3)) ||\r\n                     word.includes(keyword.slice(-3));\r\n            }\r\n            return false;\r\n          });\r\n          \r\n          if (fuzzyMatch) {\r\n            keywordScore += field.weight * 0.3;\r\n          }\r\n        }\r\n      });\r\n      \r\n      totalScore += keywordScore;\r\n      maxPossibleScore += keywordMaxScore;\r\n    });\r\n    \r\n    // Calculate confidence percentage\r\n    const confidence = maxPossibleScore > 0 ? (totalScore / maxPossibleScore) * 100 : 0;\r\n    \r\n    return {\r\n      product,\r\n      confidence: Math.min(confidence, 100) // Cap at 100%\r\n    };\r\n  });\r\n  \r\n  // Filter products with >50% confidence and sort by confidence descending\r\n  return scoredProducts\r\n    .filter(item => item.confidence > 50)\r\n    .sort((a, b) => b.confidence - a.confidence)\r\n    .map(item => item.product);\r\n}\r\n\r\n// Get total number of products\r\nexport const totalProducts = products.length;\r\n\r\n// Get available categories\r\nexport const availableCategories = [...new Set(products.map(p => p.badge))]; "],"names":[],"mappings":";;;;;;;;AAmBO,MAAM,WAAsB;IACjC,SAAS;IACT;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;IACR;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;IACR;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;IACR;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;IACR;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;IACR;IAEA,aAAa;IACb;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;IACR;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;IACR;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;IACR;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;IACR;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;IACR;IAEA,YAAY;IACZ;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;IACR;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;IACR;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;IACR;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;IACR;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;IACR;IAEA,WAAW;IACX;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;IACR;IACA;QACE,IAAI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","debugId":null}},
    {"offset": {"line": 907, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/visah/Documents/GitHub/GrabDuo/src/app/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport Link from \"next/link\";\r\nimport { useState, useMemo, useEffect } from \"react\";\r\nimport { getBadgeStyles } from \"./badge\";\r\nimport { useCart } from \"./cart/CartContext\";\r\nimport CartModal from \"./cart/CartModal\";\r\nimport { products, loadAllProducts, Product } from \"./products\";\r\nimport { OCRService, OCRResult } from \"./services/ocrService\";\r\n\r\nexport default function GroceryPage() {\r\n  const { addItem, totalItems, items, updateQuantity, removeItem } = useCart();\r\n  const [isCartOpen, setIsCartOpen] = useState(false);\r\n  const [isShoppingListModalOpen, setIsShoppingListModalOpen] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [allProducts, setAllProducts] = useState<Product[]>(products);\r\n  const [isInitialLoading, setIsInitialLoading] = useState(true);\r\n  const [isOCRProcessing, setIsOCRProcessing] = useState(false);\r\n  const itemsPerPage = 15;\r\n\r\n  // Load all products on component mount\r\n  useEffect(() => {\r\n    const loadProducts = async () => {\r\n      try {\r\n        const loadedProducts = await loadAllProducts();\r\n        setAllProducts(loadedProducts);\r\n      } catch (error) {\r\n        console.error('Failed to load all products:', error);\r\n        // Fallback to basic products on error\r\n        setAllProducts(products);\r\n      } finally {\r\n        setIsInitialLoading(false);\r\n      }\r\n    };\r\n\r\n    loadProducts();\r\n  }, []);\r\n\r\n  // Enhanced confidence-based search function\r\n  const confidenceBasedSearch = (products: Product[], query: string): Product[] => {\r\n    if (!query.trim()) return products;\r\n    \r\n    const keywords = query.toLowerCase().trim().split(/\\s+/).filter(keyword => keyword.length > 0);\r\n    if (keywords.length === 0) return products;\r\n    \r\n    const scoredProducts = products.map(product => {\r\n      let totalScore = 0;\r\n      let maxPossibleScore = 0;\r\n      \r\n      // Define field weights (importance)\r\n      const fields = [\r\n        { content: product.name.toLowerCase(), weight: 40 }, // Name is most important\r\n        { content: product.brands?.toLowerCase() || '', weight: 25 }, // Brand is second\r\n        { content: product.badge.toLowerCase(), weight: 20 }, // Category is third\r\n        { content: product.categories?.toLowerCase() || '', weight: 10 }, // Categories\r\n        { content: product.unitQuantity?.toLowerCase() || '', weight: 3 }, // Quantity\r\n        { content: product.countries?.toLowerCase() || '', weight: 2 } // Countries least important\r\n      ];\r\n      \r\n      keywords.forEach(keyword => {\r\n        let keywordScore = 0;\r\n        let keywordMaxScore = 0;\r\n        \r\n        fields.forEach(field => {\r\n          if (!field.content) return;\r\n          \r\n          keywordMaxScore += field.weight;\r\n          \r\n          // Exact match in field (highest score)\r\n          if (field.content === keyword) {\r\n            keywordScore += field.weight * 1.0;\r\n          }\r\n          // Field starts with keyword (very high score)\r\n          else if (field.content.startsWith(keyword)) {\r\n            keywordScore += field.weight * 0.9;\r\n          }\r\n          // Field contains keyword as whole word (high score)\r\n          else if (field.content.includes(` ${keyword} `) || field.content.includes(`${keyword} `) || field.content.includes(` ${keyword}`)) {\r\n            keywordScore += field.weight * 0.8;\r\n          }\r\n          // Field contains keyword as substring (medium score)\r\n          else if (field.content.includes(keyword)) {\r\n            keywordScore += field.weight * 0.6;\r\n          }\r\n          // Fuzzy match - keyword contains part of field words or vice versa (low score)\r\n          else {\r\n            const fieldWords = field.content.split(/\\s+/).filter(word => word.length > 2);\r\n                         const fuzzyMatch = fieldWords.some(word => {\r\n               // Check if keyword and word share significant overlap\r\n               if (keyword.length >= 3 && word.length >= 3) {\r\n                 return keyword.includes(word.slice(0, Math.min(3, word.length))) ||\r\n                        word.includes(keyword.slice(0, Math.min(3, keyword.length))) ||\r\n                        keyword.includes(word.slice(-3)) ||\r\n                        word.includes(keyword.slice(-3));\r\n               }\r\n               return false;\r\n             });\r\n            \r\n            if (fuzzyMatch) {\r\n              keywordScore += field.weight * 0.3;\r\n            }\r\n          }\r\n        });\r\n        \r\n        totalScore += keywordScore;\r\n        maxPossibleScore += keywordMaxScore;\r\n      });\r\n      \r\n      // Calculate confidence percentage\r\n      const confidence = maxPossibleScore > 0 ? (totalScore / maxPossibleScore) * 100 : 0;\r\n      \r\n      return {\r\n        product,\r\n        confidence: Math.min(confidence, 100) // Cap at 100%\r\n      };\r\n    });\r\n    \r\n    // Filter products with >50% confidence and sort by confidence descending\r\n    return scoredProducts\r\n      .filter(item => item.confidence > 50)\r\n      .sort((a, b) => b.confidence - a.confidence)\r\n      .map(item => item.product);\r\n  };\r\n\r\n  // Filter products based on search query using confidence-based search\r\n  const filteredProducts = useMemo(() => {\r\n    if (!searchQuery.trim()) {\r\n      return allProducts;\r\n    }\r\n    \r\n    return confidenceBasedSearch(allProducts, searchQuery);\r\n  }, [searchQuery, allProducts]);\r\n\r\n  // Calculate pagination based on filtered products\r\n  const totalPages = Math.ceil(filteredProducts.length / itemsPerPage);\r\n  const startIndex = (currentPage - 1) * itemsPerPage;\r\n  const endIndex = startIndex + itemsPerPage;\r\n  const currentProducts = filteredProducts.slice(startIndex, endIndex);\r\n\r\n  // Reset to first page when search changes\r\n  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchQuery(e.target.value);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  // Clear search\r\n  const handleClearSearch = () => {\r\n    setSearchQuery(\"\");\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  // Generate page numbers for pagination\r\n  const pageNumbers = useMemo(() => {\r\n    const pages = [];\r\n    const maxVisiblePages = 5;\r\n    \r\n    if (totalPages <= maxVisiblePages) {\r\n      for (let i = 1; i <= totalPages; i++) {\r\n        pages.push(i);\r\n      }\r\n    } else {\r\n      if (currentPage <= 3) {\r\n        for (let i = 1; i <= 5; i++) {\r\n          pages.push(i);\r\n        }\r\n      } else if (currentPage >= totalPages - 2) {\r\n        for (let i = totalPages - 4; i <= totalPages; i++) {\r\n          pages.push(i);\r\n        }\r\n      } else {\r\n        for (let i = currentPage - 2; i <= currentPage + 2; i++) {\r\n          pages.push(i);\r\n        }\r\n      }\r\n    }\r\n    return pages;\r\n  }, [currentPage, totalPages]);\r\n\r\n  const handlePageChange = (page: number) => {\r\n    setCurrentPage(page);\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  };\r\n\r\n  const handleAddToCart = (product: any) => {\r\n    addItem(product);\r\n  };\r\n\r\n  const getItemQuantity = (productId: number) => {\r\n    const cartItem = items.find((item) => item.id === productId);\r\n    return cartItem ? cartItem.quantity : 0;\r\n  };\r\n\r\n  const handleIncreaseQuantity = (product: any) => {\r\n    const currentQuantity = getItemQuantity(product.id);\r\n    if (currentQuantity === 0) {\r\n      addItem(product);\r\n    } else {\r\n      updateQuantity(product.id, currentQuantity + 1);\r\n    }\r\n  };\r\n\r\n  const handleDecreaseQuantity = (productId: number) => {\r\n    const currentQuantity = getItemQuantity(productId);\r\n    if (currentQuantity > 1) {\r\n      updateQuantity(productId, currentQuantity - 1);\r\n    } else if (currentQuantity === 1) {\r\n      removeItem(productId);\r\n    }\r\n  };\r\n\r\n  // Shopping list modal handlers\r\n  const handleSayIt = async () => {\r\n    try {\r\n      // Check if browser supports MediaRecorder\r\n      if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\r\n        alert('Audio recording is not supported in this browser.');\r\n        return;\r\n      }\r\n\r\n      setIsOCRProcessing(true);\r\n      setIsShoppingListModalOpen(false);\r\n\r\n      // Request microphone access\r\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      \r\n      // Show recording UI\r\n      const toast = document.createElement('div');\r\n      toast.className = 'fixed top-4 left-1/2 transform -translate-x-1/2 bg-blue-600 text-white px-6 py-3 rounded-lg shadow-lg z-50 animate-slide-down';\r\n      toast.innerHTML = `\r\n        <div class=\"flex items-center gap-2\">\r\n          <div class=\"w-3 h-3 bg-red-500 rounded-full animate-pulse\"></div>\r\n          <span>Recording... Click to stop</span>\r\n        </div>\r\n      `;\r\n      document.body.appendChild(toast);\r\n\r\n      const mediaRecorder = new MediaRecorder(stream);\r\n      const audioChunks: Blob[] = [];\r\n\r\n      mediaRecorder.ondataavailable = (event) => {\r\n        audioChunks.push(event.data);\r\n      };\r\n\r\n      mediaRecorder.onstop = async () => {\r\n        stream.getTracks().forEach(track => track.stop());\r\n        \r\n        // Remove recording UI\r\n        document.body.removeChild(toast);\r\n        \r\n        // Create audio blob\r\n        const audioBlob = new Blob(audioChunks, { type: 'audio/wav' });\r\n        \r\n        // Show processing message\r\n        const processingToast = document.createElement('div');\r\n        processingToast.className = 'fixed top-4 left-1/2 transform -translate-x-1/2 bg-purple-600 text-white px-6 py-3 rounded-lg shadow-lg z-50 animate-slide-down';\r\n        processingToast.innerHTML = `\r\n          <div class=\"flex items-center gap-2\">\r\n            <svg class=\"w-5 h-5 animate-spin\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"></path>\r\n            </svg>\r\n            <span>Processing speech...</span>\r\n          </div>\r\n        `;\r\n        document.body.appendChild(processingToast);\r\n\r\n        try {\r\n          // For now, we'll use a placeholder URL since we need to upload the audio first\r\n          // In a production app, you'd upload the audio file to get a URL\r\n          const audioUrl = 'https://example.com/audio/sample.wav';\r\n\r\n          // Call the STT API\r\n          const sttResponse = await fetch('http://localhost:8000/api/v1/stt/transcribe', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n              audio_url: audioUrl,\r\n              confidence_threshold: 0\r\n            })\r\n          });\r\n\r\n          if (!sttResponse.ok) {\r\n            throw new Error(`STT API request failed: ${sttResponse.status}`);\r\n          }\r\n\r\n          const sttResult = await sttResponse.json();\r\n          \r\n          // Extract transcribed text\r\n          const transcribedText = sttResult.transcribed_text || sttResult.text || sttResult.transcript;\r\n          \r\n          if (transcribedText) {\r\n            // Parse the transcribed text into shopping list items\r\n            const extractedItems = parseShoppingListFromText(transcribedText);\r\n            \r\n            if (extractedItems.length > 0) {\r\n              // Store the extracted items in localStorage for the wishlist page\r\n              localStorage.setItem('ocrShoppingItems', JSON.stringify(extractedItems));\r\n              localStorage.setItem('ocrOriginalText', transcribedText);\r\n              \r\n              // Remove processing toast\r\n              document.body.removeChild(processingToast);\r\n              \r\n              // Navigate to wishlist page immediately\r\n              window.location.href = '/wishlist?from=stt';\r\n            } else {\r\n              // Even if no items found, store the original text\r\n              localStorage.setItem('ocrOriginalText', transcribedText);\r\n              window.location.href = '/wishlist?from=stt';\r\n            }\r\n          } else {\r\n            throw new Error('No transcribed text received');\r\n          }\r\n        } catch (error) {\r\n          console.error('STT Error:', error);\r\n          \r\n          // Remove processing toast\r\n          if (document.body.contains(processingToast)) {\r\n            document.body.removeChild(processingToast);\r\n          }\r\n          \r\n          const errorMessage = error instanceof Error ? error.message : 'An unknown error occurred';\r\n          alert(`Speech processing failed: ${errorMessage}\\n\\nPlease try again or use manual entry.`);\r\n        } finally {\r\n          setIsOCRProcessing(false);\r\n        }\r\n      };\r\n\r\n      // Stop recording when toast is clicked\r\n      toast.onclick = () => {\r\n        mediaRecorder.stop();\r\n      };\r\n\r\n      // Start recording\r\n      mediaRecorder.start();\r\n      \r\n      // Auto-stop after 10 seconds\r\n      setTimeout(() => {\r\n        if (mediaRecorder.state === 'recording') {\r\n          mediaRecorder.stop();\r\n        }\r\n      }, 10000);\r\n\r\n    } catch (error) {\r\n      console.error('Error starting voice recording:', error);\r\n      setIsOCRProcessing(false);\r\n      \r\n      const errorMessage = error instanceof Error ? error.message : 'Microphone access denied or not available';\r\n      alert(`Voice recording failed: ${errorMessage}`);\r\n    }\r\n  };\r\n\r\n  // Helper function to parse shopping list from OCR text\r\n  const parseShoppingListFromText = (text: string): string[] => {\r\n    const lines = text.split('\\n').map(line => line.trim()).filter(line => line.length > 0);\r\n    const items: string[] = [];\r\n    \r\n    for (const line of lines) {\r\n      // Remove common list markers (-, *, •, numbers)\r\n      const cleanLine = line.replace(/^[-*•]\\s*/, '').replace(/^\\d+\\.?\\s*/, '').trim();\r\n      \r\n      if (cleanLine.length > 2 && cleanLine.length < 50) {\r\n        // Filter out non-product lines (like titles, headers, etc.)\r\n        const lowerLine = cleanLine.toLowerCase();\r\n        if (!lowerLine.includes('shopping') && \r\n            !lowerLine.includes('list') && \r\n            !lowerLine.includes('grocery') &&\r\n            !lowerLine.includes('store') &&\r\n            !lowerLine.includes('buy') &&\r\n            !lowerLine.match(/^\\d+$/) && // Just numbers\r\n            !lowerLine.match(/^[a-z]\\.$/) // Single letters\r\n        ) {\r\n          items.push(cleanLine);\r\n        }\r\n      }\r\n    }\r\n    \r\n    return items.slice(0, 20); // Limit to 20 items\r\n  };\r\n\r\n  const handleSnapIt = () => {\r\n    setIsShoppingListModalOpen(false);\r\n    // TODO: Implement camera/image capture functionality\r\n    console.log(\"Snap it functionality - Camera capture\");\r\n    // For now, redirect to wishlist page\r\n    window.location.href = \"/wishlist\";\r\n  };\r\n\r\n  // Show loading state while products are being loaded\r\n  if (isInitialLoading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-green-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <svg className=\"animate-spin h-12 w-12 mx-auto mb-4 text-green-600\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n            <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\r\n            <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\" />\r\n          </svg>\r\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">Loading GrabMart</h2>\r\n          <p className=\"text-gray-600\">Preparing all products for you...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"min-h-screen bg-green-50 px-4 py-6\">\r\n        {/* Header */}\r\n        <div className=\"mb-6\">\r\n          <div className=\"flex items-center justify-between mb-2\">\r\n            <div className=\"flex items-center gap-2\">\r\n              <h1 className=\"text-2xl font-bold text-gray-900\">GrabMart</h1>\r\n            </div>\r\n\r\n            {/* Right side icons */}\r\n            <div className=\"flex items-center gap-3\">\r\n              {/* Shopping Cart Icon with Cart Count */}\r\n              <button\r\n                onClick={() => setIsCartOpen(true)}\r\n                className=\"relative p-2 bg-white rounded-full shadow-sm hover:bg-gray-50 transition-colors\"\r\n              >\r\n                <svg\r\n                  className=\"w-6 h-6 text-gray-600\"\r\n                  fill=\"none\"\r\n                  stroke=\"currentColor\"\r\n                  viewBox=\"0 0 24 24\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z\"\r\n                  />\r\n                </svg>\r\n                {totalItems > 0 && (\r\n                  <span className=\"absolute -top-1 -right-1 bg-red-500 text-white text-xs font-bold rounded-full w-5 h-5 flex items-center justify-center\">\r\n                    {totalItems}\r\n                  </span>\r\n                )}\r\n              </button>\r\n\r\n              {/* User Icon */}\r\n              <Link\r\n                href=\"/profile\"\r\n                className=\"p-2 bg-white rounded-full shadow-sm hover:bg-gray-50 transition-colors\"\r\n              >\r\n                <svg\r\n                  className=\"w-6 h-6 text-gray-600\"\r\n                  fill=\"none\"\r\n                  stroke=\"currentColor\"\r\n                  viewBox=\"0 0 24 24\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\r\n                  />\r\n                </svg>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <p className=\"text-gray-600\">\r\n            Fresh groceries delivered to your door\r\n          </p>\r\n\r\n          {/* Search Bar */}\r\n          <div className=\"mt-4\">\r\n            <div className=\"relative\">\r\n              <svg\r\n                className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                viewBox=\"0 0 24 24\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\r\n                />\r\n              </svg>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search by name, brand, category, or keywords...\"\r\n                className=\"w-full pl-10 pr-24 py-3 bg-white border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent\"\r\n                value={searchQuery}\r\n                onChange={handleSearchChange}\r\n              />\r\n              \r\n              {/* Clear Search Button */}\r\n              {searchQuery && (\r\n                <button\r\n                  onClick={handleClearSearch}\r\n                  className=\"absolute right-20 top-1/2 transform -translate-y-1/2 p-1 hover:bg-gray-100 rounded-md transition-colors\"\r\n                  title=\"Clear search\"\r\n                >\r\n                  <svg\r\n                    className=\"w-4 h-4 text-gray-400 hover:text-gray-600\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    viewBox=\"0 0 24 24\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth={2}\r\n                      d=\"M6 18L18 6M6 6l12 12\"\r\n                    />\r\n                  </svg>\r\n                </button>\r\n              )}\r\n\r\n              {/* Right side icons */}\r\n              <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2 flex items-center gap-2\">\r\n                {/* Shopping List Icon */}\r\n                <button\r\n                  onClick={() => setIsShoppingListModalOpen(true)}\r\n                  className=\"relative p-1 hover:bg-gray-100 rounded-md transition-colors\"\r\n                  title=\"Shopping List\"\r\n                >\r\n                  <svg\r\n                    className=\"w-5 h-5 text-gray-400 hover:text-green-500 transition-colors\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    viewBox=\"0 0 24 24\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth={2}\r\n                      d=\"M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01\"\r\n                    />\r\n                  </svg>\r\n                </button>\r\n\r\n                {/* AI Sparkle Button */}\r\n                <button className=\"p-1 hover:bg-gray-100 rounded-md transition-colors\">\r\n                  <svg\r\n                    className=\"w-5 h-5 text-purple-500\"\r\n                    fill=\"currentColor\"\r\n                    viewBox=\"0 0 24 24\"\r\n                  >\r\n                    <path d=\"M12 0l3.09 6.91L22 10l-6.91 3.09L12 20l-3.09-6.91L2 10l6.91-3.09L12 0z\" />\r\n                    <path d=\"M19 1l1.5 3.5L24 6l-3.5 1.5L19 11l-1.5-3.5L14 6l3.5-1.5L19 1z\" />\r\n                    <path d=\"M7 4l1 2L10 7l-2 1L7 10l-1-2L4 7l2-1L7 4z\" />\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Search Help Text */}\r\n            <div className=\"mt-2 text-xs text-gray-500\">\r\n              💡 Smart search: \"coca cola\", \"fruits\", \"nestle\", \"australia\", \"500ml\" - Only shows products with &gt;50% relevance\r\n            </div>\r\n            \r\n\r\n          </div>\r\n        </div>\r\n\r\n        {/* Product Count Info */}\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <p className=\"text-gray-600\">\r\n            Showing {startIndex + 1}-{Math.min(endIndex, filteredProducts.length)} of {filteredProducts.length} products\r\n          </p>\r\n          <p className=\"text-sm text-gray-500\">\r\n            Page {currentPage} of {totalPages}\r\n          </p>\r\n        </div>\r\n\r\n        {/* No Results Message */}\r\n        {filteredProducts.length === 0 && searchQuery && (\r\n          <div className=\"text-center py-12\">\r\n            <div className=\"text-gray-400 mb-4\">\r\n              <svg\r\n                className=\"w-16 h-16 mx-auto mb-4\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                viewBox=\"0 0 24 24\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={1.5}\r\n                  d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\r\n                />\r\n              </svg>\r\n            </div>\r\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\r\n              No products found\r\n            </h3>\r\n            <p className=\"text-gray-600 mb-4\">\r\n              No products with &gt;50% relevance found for \"{searchQuery}\". Try more specific or different keywords.\r\n            </p>\r\n            <p className=\"text-sm text-gray-500 mb-4\">\r\n              💡 High-confidence search: Try \"coca cola\", \"fruits\", \"nestle\", \"biscuits\", \"australia\", or \"500ml\"\r\n            </p>\r\n            <button\r\n              onClick={handleClearSearch}\r\n              className=\"bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition-colors\"\r\n            >\r\n              Clear Search\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        {/* Product Grid - 2 columns for mobile */}\r\n        {filteredProducts.length > 0 && (\r\n          <div className=\"grid grid-cols-2 gap-3\">\r\n            {currentProducts.map((product) => (\r\n            <div\r\n              key={product.id}\r\n              className=\"bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden hover:shadow-md transition-all duration-200 flex flex-col h-full\"\r\n            >\r\n              {/* Product Visual */}\r\n              <div\r\n                className={`relative aspect-square bg-gradient-to-br ${product.color} flex items-center justify-center`}\r\n              >\r\n                {/* Text Abbreviation */}\r\n                <div className=\"text-6xl font-bold text-white\">\r\n                  {product.icon}\r\n                </div>\r\n\r\n                {/* Badge */}\r\n                <div className=\"absolute top-2 left-2\">\r\n                  <span\r\n                    className={`px-2 py-1 text-xs font-medium rounded-full ${getBadgeStyles(\r\n                      product.badge\r\n                    )}`}\r\n                  >\r\n                    {product.badge}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Product Details */}\r\n              <div className=\"p-4 flex flex-col flex-1\">\r\n                {/* Product Name */}\r\n                <h3 className=\"font-semibold text-gray-900 text-sm mb-3 line-clamp-2 flex-1\">\r\n                  {product.name}\r\n                </h3>\r\n\r\n                {/* Price */}\r\n                <div className=\"mb-4\">\r\n                  <span className=\"font-bold text-green-600 text-xl\">\r\n                    {product.price}\r\n                  </span>\r\n                </div>\r\n\r\n                {/* Add to Cart Button */}\r\n                <button\r\n                  onClick={() => handleAddToCart(product)}\r\n                  className=\"w-full bg-green-600 text-white text-sm font-medium py-3 px-3 rounded-lg hover:bg-green-700 transition-colors duration-200 active:bg-green-800 mt-auto\"\r\n                >\r\n                  Add to Cart\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n          </div>\r\n        )}\r\n\r\n        {/* Pagination */}\r\n        {totalPages > 1 && (\r\n          <div className=\"mt-8 flex flex-col items-center gap-4\">\r\n            {/* Page Info */}\r\n            <div className=\"text-sm text-gray-600\">\r\n              Page {currentPage} of {totalPages}\r\n            </div>\r\n\r\n            {/* Pagination Controls */}\r\n            <div className=\"flex items-center gap-2\">\r\n              {/* Previous Button */}\r\n              <button\r\n                onClick={() => handlePageChange(currentPage - 1)}\r\n                disabled={currentPage === 1}\r\n                className={`px-4 py-2 rounded-lg font-medium transition-colors ${\r\n                  currentPage === 1\r\n                    ? 'bg-gray-100 text-gray-400 cursor-not-allowed'\r\n                    : 'bg-white border border-gray-300 text-gray-700 hover:bg-gray-50'\r\n                }`}\r\n              >\r\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\r\n                </svg>\r\n              </button>\r\n\r\n              {/* Page Numbers */}\r\n              {pageNumbers.map((page) => (\r\n                <button\r\n                  key={page}\r\n                  onClick={() => handlePageChange(page)}\r\n                  className={`px-3 py-2 rounded-lg font-medium transition-colors ${\r\n                    currentPage === page\r\n                      ? 'bg-green-600 text-white shadow-sm'\r\n                      : 'bg-white border border-gray-300 text-gray-700 hover:bg-gray-50'\r\n                  }`}\r\n                >\r\n                  {page}\r\n                </button>\r\n              ))}\r\n\r\n              {/* Next Button */}\r\n              <button\r\n                onClick={() => handlePageChange(currentPage + 1)}\r\n                disabled={currentPage === totalPages}\r\n                className={`px-4 py-2 rounded-lg font-medium transition-colors ${\r\n                  currentPage === totalPages\r\n                    ? 'bg-gray-100 text-gray-400 cursor-not-allowed'\r\n                    : 'bg-white border border-gray-300 text-gray-700 hover:bg-gray-50'\r\n                }`}\r\n              >\r\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Cart Modal */}\r\n      <CartModal isOpen={isCartOpen} onClose={() => setIsCartOpen(false)} />\r\n\r\n      {/* Shopping List Modal */}\r\n      {isShoppingListModalOpen && (\r\n        <div \r\n          className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\r\n          onClick={() => setIsShoppingListModalOpen(false)}\r\n        >\r\n          <div \r\n            className=\"bg-white rounded-2xl p-8 mx-4 max-w-md w-full shadow-2xl animate-scale-up\"\r\n            onClick={(e) => e.stopPropagation()}\r\n          >\r\n            {/* Modal Header */}\r\n            <div className=\"text-center mb-8\">\r\n              <div className=\"mb-4\">\r\n                <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto\">\r\n                  <svg\r\n                    className=\"w-8 h-8 text-green-600\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    viewBox=\"0 0 24 24\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth={2}\r\n                      d=\"M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01\"\r\n                    />\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">Create Shopping List</h2>\r\n              <p className=\"text-gray-600\">Choose how you'd like to add items to your shopping list</p>\r\n            </div>\r\n\r\n            {/* Modal Buttons */}\r\n            <div className=\"space-y-4\">\r\n              {/* Snap It Button */}\r\n              <button\r\n                onClick={handleSayIt}\r\n                disabled={isOCRProcessing}\r\n                className={`w-full rounded-xl py-4 px-6 flex items-center justify-center gap-3 transition-colors shadow-lg ${\r\n                  isOCRProcessing \r\n                    ? 'bg-gray-400 cursor-not-allowed text-white' \r\n                    : 'bg-blue-600 hover:bg-blue-700 text-white'\r\n                }`}\r\n              >\r\n                {isOCRProcessing ? (\r\n                  <>\r\n                    <svg\r\n                      className=\"w-6 h-6 animate-spin\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      viewBox=\"0 0 24 24\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth={2}\r\n                        d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\r\n                      />\r\n                    </svg>\r\n                    <div className=\"text-left\">\r\n                      <div className=\"font-semibold text-lg\">Processing...</div>\r\n                      <div className=\"text-gray-100 text-sm\">Extracting text from image</div>\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <svg\r\n                      className=\"w-6 h-6\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      viewBox=\"0 0 24 24\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth={2}\r\n                        d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\"\r\n                      />\r\n                    </svg>\r\n                    <div className=\"text-left\">\r\n                      <div className=\"font-semibold text-lg\">Snap It</div>\r\n                      <div className=\"text-blue-100 text-sm\">Upload image with your list</div>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </button>\r\n\r\n              {/* Say It Button */}\r\n              <button\r\n                onClick={handleSnapIt}\r\n                className=\"w-full bg-purple-600 hover:bg-purple-700 text-white rounded-xl py-4 px-6 flex items-center justify-center gap-3 transition-colors shadow-lg\"\r\n              >\r\n                <svg\r\n                  className=\"w-6 h-6\"\r\n                  fill=\"none\"\r\n                  stroke=\"currentColor\"\r\n                  viewBox=\"0 0 24 24\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z\"\r\n                  />\r\n                </svg>\r\n                <div className=\"text-left\">\r\n                  <div className=\"font-semibold text-lg\">Say It</div>\r\n                  <div className=\"text-purple-100 text-sm\">Use voice to add items</div>\r\n                </div>\r\n              </button>\r\n\r\n              {/* Manual Entry Option */}\r\n              <button\r\n                onClick={() => {\r\n                  setIsShoppingListModalOpen(false);\r\n                  window.location.href = \"/wishlist\";\r\n                }}\r\n                className=\"w-full bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-xl py-3 px-6 flex items-center justify-center gap-3 transition-colors\"\r\n              >\r\n                <svg\r\n                  className=\"w-5 h-5\"\r\n                  fill=\"none\"\r\n                  stroke=\"currentColor\"\r\n                  viewBox=\"0 0 24 24\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\"\r\n                  />\r\n                </svg>\r\n                <span className=\"font-medium\">Type Manually</span>\r\n              </button>\r\n            </div>\r\n\r\n            {/* Close Button */}\r\n            <button\r\n              onClick={() => setIsShoppingListModalOpen(false)}\r\n              className=\"absolute top-4 right-4 text-gray-400 hover:text-gray-600 transition-colors\"\r\n            >\r\n              <svg\r\n                className=\"w-6 h-6\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                viewBox=\"0 0 24 24\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M6 18L18 6M6 6l12 12\"\r\n                />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}