{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/visah/Documents/GitHub/GrabDuo/src/app/products.ts"],"sourcesContent":["import { BadgeType } from \"./badge\";\r\n\r\nexport interface Product {\r\n  id: number;\r\n  name: string;\r\n  price: string;\r\n  badge: BadgeType;\r\n  color: string;\r\n  icon: string;\r\n  // Additional fields from integrated data\r\n  brands?: string;\r\n  unitQuantity?: string;\r\n  categories?: string;\r\n  countries?: string;\r\n  imageUrl?: string;\r\n  imageSmallUrl?: string;\r\n}\r\n\r\n// Basic products for initial load (keeping only essential items)\r\nexport const products: Product[] = [\r\n  // Fruits\r\n  {\r\n    id: 1,\r\n    name: \"Fresh Mango (Alphonso)\",\r\n    price: \"S$1.30/kg\",\r\n    badge: \"Fruits\",\r\n    color: \"from-yellow-300 to-orange-400\",\r\n    icon: \"ü•≠\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Sweet Guava\",\r\n    price: \"S$0.65/kg\",\r\n    badge: \"Fruits\",\r\n    color: \"from-green-200 to-green-400\",\r\n    icon: \"üçà\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Fresh Pomegranate\",\r\n    price: \"S$1.95/kg\",\r\n    badge: \"Fruits\",\r\n    color: \"from-red-300 to-red-500\",\r\n    icon: \"üçé\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Kesar Banana\",\r\n    price: \"S$0.95/dozen\",\r\n    badge: \"Fruits\",\r\n    color: \"from-yellow-200 to-yellow-400\",\r\n    icon: \"üçå\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Fresh Papaya\",\r\n    price: \"S$0.50/kg\",\r\n    badge: \"Fruits\",\r\n    color: \"from-orange-200 to-orange-400\",\r\n    icon: \"üçä\",\r\n  },\r\n\r\n  // Vegetables\r\n  {\r\n    id: 6,\r\n    name: \"Lady Finger (Bhindi)\",\r\n    price: \"S$0.65/kg\",\r\n    badge: \"Vegetables\",\r\n    color: \"from-green-300 to-green-500\",\r\n    icon: \"ü•í\",\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"Brinjal (Baingan)\",\r\n    price: \"S$0.55/kg\",\r\n    badge: \"Vegetables\",\r\n    color: \"from-purple-300 to-purple-500\",\r\n    icon: \"üçÜ\",\r\n  },\r\n  {\r\n    id: 8,\r\n    name: \"Bitter Gourd (Karela)\",\r\n    price: \"S$0.75/kg\",\r\n    badge: \"Vegetables\",\r\n    color: \"from-green-400 to-green-600\",\r\n    icon: \"ü•¨\",\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"Bottle Gourd (Lauki)\",\r\n    price: \"S$0.40/kg\",\r\n    badge: \"Vegetables\",\r\n    color: \"from-green-200 to-green-400\",\r\n    icon: \"ü•í\",\r\n  },\r\n  {\r\n    id: 10,\r\n    name: \"Drumstick (Moringa)\",\r\n    price: \"S$0.95/kg\",\r\n    badge: \"Vegetables\",\r\n    color: \"from-green-300 to-green-500\",\r\n    icon: \"üåø\",\r\n  },\r\n\r\n  // Beverages\r\n  {\r\n    id: 11,\r\n    name: \"Coca Cola 600ml\",\r\n    price: \"S$0.65\",\r\n    badge: \"Beverages\",\r\n    color: \"from-red-400 to-red-600\",\r\n    icon: \"ü•§\",\r\n  },\r\n  {\r\n    id: 12,\r\n    name: \"Pepsi 600ml\",\r\n    price: \"S$0.65\",\r\n    badge: \"Beverages\",\r\n    color: \"from-blue-400 to-blue-600\",\r\n    icon: \"ü•§\",\r\n  },\r\n  {\r\n    id: 13,\r\n    name: \"Thums Up 600ml\",\r\n    price: \"S$0.65\",\r\n    badge: \"Beverages\",\r\n    color: \"from-gray-600 to-gray-800\",\r\n    icon: \"ü•§\",\r\n  },\r\n  {\r\n    id: 14,\r\n    name: \"Masala Chai\",\r\n    price: \"S$0.25/cup\",\r\n    badge: \"Beverages\",\r\n    color: \"from-amber-300 to-amber-500\",\r\n    icon: \"‚òï\",\r\n  },\r\n  {\r\n    id: 15,\r\n    name: \"Sweet Lassi\",\r\n    price: \"S$0.50\",\r\n    badge: \"Dairy\",\r\n    color: \"from-pink-200 to-pink-400\",\r\n    icon: \"ü•õ\",\r\n  },\r\n\r\n  // Biscuits\r\n  {\r\n    id: 16,\r\n    name: \"Parle-G Original\",\r\n    price: \"S$0.15\",\r\n    badge: \"Biscuits\",\r\n    color: \"from-yellow-200 to-yellow-400\",\r\n    icon: \"üç™\",\r\n  },\r\n  {\r\n    id: 17,\r\n    name: \"Monaco Salted Biscuits\",\r\n    price: \"S$0.25\",\r\n    badge: \"Biscuits\",\r\n    color: \"from-orange-200 to-orange-400\",\r\n    icon: \"üç™\",\r\n  },\r\n  {\r\n    id: 18,\r\n    name: \"Good Day Cashew\",\r\n    price: \"S$0.40\",\r\n    badge: \"Biscuits\",\r\n    color: \"from-amber-200 to-amber-400\",\r\n    icon: \"üç™\",\r\n  },\r\n  {\r\n    id: 19,\r\n    name: \"Oreo Cookies\",\r\n    price: \"S$0.55\",\r\n    badge: \"Biscuits\",\r\n    color: \"from-gray-600 to-gray-800\",\r\n    icon: \"üç™\",\r\n  },\r\n  {\r\n    id: 20,\r\n    name: \"Marie Gold Biscuits\",\r\n    price: \"S$0.50\",\r\n    badge: \"Biscuits\",\r\n    color: \"from-yellow-300 to-yellow-500\",\r\n    icon: \"üç™\",\r\n  },\r\n\r\n  // Snacks\r\n  {\r\n    id: 21,\r\n    name: \"Haldiram's Namkeen\",\r\n    price: \"S$0.75\",\r\n    badge: \"Snacks\",\r\n    color: \"from-yellow-400 to-orange-500\",\r\n    icon: \"ü•®\",\r\n  },\r\n  {\r\n    id: 22,\r\n    name: \"Kurkure Masala Munch\",\r\n    price: \"S$0.35\",\r\n    badge: \"Snacks\",\r\n    color: \"from-orange-400 to-red-500\",\r\n    icon: \"üåΩ\",\r\n  },\r\n  {\r\n    id: 23,\r\n    name: \"Lay's Classic Salted\",\r\n    price: \"S$0.45\",\r\n    badge: \"Snacks\",\r\n    color: \"from-yellow-300 to-yellow-500\",\r\n    icon: \"ü•î\",\r\n  },\r\n  {\r\n    id: 24,\r\n    name: \"Britannia Good Day\",\r\n    price: \"S$0.30\",\r\n    badge: \"Biscuits\",\r\n    color: \"from-orange-200 to-orange-400\",\r\n    icon: \"üç™\",\r\n  },\r\n  {\r\n    id: 25,\r\n    name: \"Amul Fresh Milk\",\r\n    price: \"S$0.85/ltr\",\r\n    badge: \"Dairy\",\r\n    color: \"from-blue-100 to-blue-300\",\r\n    icon: \"ü•õ\",\r\n  },\r\n];\r\n\r\n// Async function to load all products from API\r\nlet allProductsCache: Product[] | null = null;\r\n\r\nexport async function loadAllProducts(): Promise<Product[]> {\r\n  if (allProductsCache) {\r\n    return allProductsCache;\r\n  }\r\n\r\n  try {\r\n    const response = await fetch('/api/products');\r\n    if (!response.ok) {\r\n      throw new Error('Failed to load products');\r\n    }\r\n    const loadedProducts: Product[] = await response.json();\r\n    allProductsCache = loadedProducts;\r\n    return loadedProducts;\r\n  } catch (error) {\r\n    console.error('Error loading products:', error);\r\n    // Fallback to default products if API fails\r\n    return products;\r\n  }\r\n}\r\n\r\n// Helper function to get products by category\r\nexport function getProductsByCategory(category: BadgeType, productList: Product[] = products): Product[] {\r\n  return productList.filter(product => product.badge === category);\r\n}\r\n\r\n// Enhanced confidence-based search function\r\nexport function searchProducts(query: string, productList: Product[] = products): Product[] {\r\n  if (!query.trim()) return productList;\r\n  \r\n  const keywords = query.toLowerCase().trim().split(/\\s+/).filter(keyword => keyword.length > 0);\r\n  if (keywords.length === 0) return productList;\r\n  \r\n  const scoredProducts = productList.map(product => {\r\n    let totalScore = 0;\r\n    let maxPossibleScore = 0;\r\n    \r\n    // Define field weights (importance)\r\n    const fields = [\r\n      { content: product.name.toLowerCase(), weight: 40 }, // Name is most important\r\n      { content: product.brands?.toLowerCase() || '', weight: 25 }, // Brand is second\r\n      { content: product.badge.toLowerCase(), weight: 20 }, // Category is third\r\n      { content: product.categories?.toLowerCase() || '', weight: 10 }, // Categories\r\n      { content: product.unitQuantity?.toLowerCase() || '', weight: 3 }, // Quantity\r\n      { content: product.countries?.toLowerCase() || '', weight: 2 } // Countries least important\r\n    ];\r\n    \r\n    keywords.forEach(keyword => {\r\n      let keywordScore = 0;\r\n      let keywordMaxScore = 0;\r\n      \r\n      fields.forEach(field => {\r\n        if (!field.content) return;\r\n        \r\n        keywordMaxScore += field.weight;\r\n        \r\n        // Exact match in field (highest score)\r\n        if (field.content === keyword) {\r\n          keywordScore += field.weight * 1.0;\r\n        }\r\n        // Field starts with keyword (very high score)\r\n        else if (field.content.startsWith(keyword)) {\r\n          keywordScore += field.weight * 0.9;\r\n        }\r\n        // Field contains keyword as whole word (high score)\r\n        else if (field.content.includes(` ${keyword} `) || field.content.includes(`${keyword} `) || field.content.includes(` ${keyword}`)) {\r\n          keywordScore += field.weight * 0.8;\r\n        }\r\n        // Field contains keyword as substring (medium score)\r\n        else if (field.content.includes(keyword)) {\r\n          keywordScore += field.weight * 0.6;\r\n        }\r\n        // Fuzzy match - keyword contains part of field words or vice versa (low score)\r\n        else {\r\n          const fieldWords = field.content.split(/\\s+/).filter(word => word.length > 2);\r\n          const fuzzyMatch = fieldWords.some(word => {\r\n            // Check if keyword and word share significant overlap\r\n            if (keyword.length >= 3 && word.length >= 3) {\r\n              return keyword.includes(word.slice(0, Math.min(3, word.length))) ||\r\n                     word.includes(keyword.slice(0, Math.min(3, keyword.length))) ||\r\n                     keyword.includes(word.slice(-3)) ||\r\n                     word.includes(keyword.slice(-3));\r\n            }\r\n            return false;\r\n          });\r\n          \r\n          if (fuzzyMatch) {\r\n            keywordScore += field.weight * 0.3;\r\n          }\r\n        }\r\n      });\r\n      \r\n      totalScore += keywordScore;\r\n      maxPossibleScore += keywordMaxScore;\r\n    });\r\n    \r\n    // Calculate confidence percentage\r\n    const confidence = maxPossibleScore > 0 ? (totalScore / maxPossibleScore) * 100 : 0;\r\n    \r\n    return {\r\n      product,\r\n      confidence: Math.min(confidence, 100) // Cap at 100%\r\n    };\r\n  });\r\n  \r\n  // Filter products with >50% confidence and sort by confidence descending\r\n  return scoredProducts\r\n    .filter(item => item.confidence > 50)\r\n    .sort((a, b) => b.confidence - a.confidence)\r\n    .map(item => item.product);\r\n}\r\n\r\n// Get total number of products\r\nexport const totalProducts = products.length;\r\n\r\n// Get available categories\r\nexport const availableCategories = [...new Set(products.map(p => p.badge))]; "],"names":[],"mappings":";;;;;;;;AAmBO,MAAM,WAAsB;IACjC,SAAS;IACT;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;IACR;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;IACR;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;IACR;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;IACR;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;IACR;IAEA,aAAa;IACb;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;IACR;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;IACR;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;IACR;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;IACR;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;IACR;IAEA,YAAY;IACZ;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;IACR;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;IACR;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;IACR;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;IACR;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;IACR;IAEA,WAAW;IACX;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;IACR;IACA;QACE,IAAI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","debugId":null}},
    {"offset": {"line": 334, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/visah/Documents/GitHub/GrabDuo/src/app/badge.ts"],"sourcesContent":["export type BadgeType =\r\n  | \"Organic\"\r\n  | \"Fresh\"\r\n  | \"Bakery\"\r\n  | \"Protein\"\r\n  | \"Ready to eat\"\r\n  | \"Snacks\"\r\n  | \"Beverages\"\r\n  | \"Traditional\"\r\n  | \"Spicy\"\r\n  | \"Sweet\"\r\n  | \"Dairy\"\r\n  | \"Grains\"\r\n  | \"Vegetables\"\r\n  | \"Fruits\"\r\n  | \"Biscuits\"\r\n  | \"Other\"\r\n  | \"Meat\"\r\n  | \"Sweets\"\r\n  | \"Cereals\";\r\n\r\nexport interface Badge {\r\n  type: BadgeType;\r\n  bgColor: string;\r\n  textColor: string;\r\n}\r\n\r\nexport const badges: Record<BadgeType, Badge> = {\r\n  Organic: {\r\n    type: \"Organic\",\r\n    bgColor: \"bg-green-100\",\r\n    textColor: \"text-green-800\",\r\n  },\r\n  Fresh: {\r\n    type: \"Fresh\",\r\n    bgColor: \"bg-blue-100\",\r\n    textColor: \"text-blue-800\",\r\n  },\r\n  Bakery: {\r\n    type: \"Bakery\",\r\n    bgColor: \"bg-orange-100\",\r\n    textColor: \"text-orange-800\",\r\n  },\r\n  Protein: {\r\n    type: \"Protein\",\r\n    bgColor: \"bg-purple-100\",\r\n    textColor: \"text-purple-800\",\r\n  },\r\n  \"Ready to eat\": {\r\n    type: \"Ready to eat\",\r\n    bgColor: \"bg-yellow-100\",\r\n    textColor: \"text-yellow-800\",\r\n  },\r\n  Snacks: {\r\n    type: \"Snacks\",\r\n    bgColor: \"bg-red-100\",\r\n    textColor: \"text-red-800\",\r\n  },\r\n  Beverages: {\r\n    type: \"Beverages\",\r\n    bgColor: \"bg-cyan-100\",\r\n    textColor: \"text-cyan-800\",\r\n  },\r\n  Traditional: {\r\n    type: \"Traditional\",\r\n    bgColor: \"bg-amber-100\",\r\n    textColor: \"text-amber-800\",\r\n  },\r\n  Spicy: {\r\n    type: \"Spicy\",\r\n    bgColor: \"bg-rose-100\",\r\n    textColor: \"text-rose-800\",\r\n  },\r\n  Sweet: {\r\n    type: \"Sweet\",\r\n    bgColor: \"bg-pink-100\",\r\n    textColor: \"text-pink-800\",\r\n  },\r\n  Dairy: {\r\n    type: \"Dairy\",\r\n    bgColor: \"bg-indigo-100\",\r\n    textColor: \"text-indigo-800\",\r\n  },\r\n  Grains: {\r\n    type: \"Grains\",\r\n    bgColor: \"bg-yellow-100\",\r\n    textColor: \"text-yellow-800\",\r\n  },\r\n  Vegetables: {\r\n    type: \"Vegetables\",\r\n    bgColor: \"bg-green-100\",\r\n    textColor: \"text-green-800\",\r\n  },\r\n  Fruits: {\r\n    type: \"Fruits\",\r\n    bgColor: \"bg-orange-100\",\r\n    textColor: \"text-orange-800\",\r\n  },\r\n  Biscuits: {\r\n    type: \"Biscuits\",\r\n    bgColor: \"bg-amber-100\",\r\n    textColor: \"text-amber-800\",\r\n  },\r\n  Other: {\r\n    type: \"Other\",\r\n    bgColor: \"bg-gray-100\",\r\n    textColor: \"text-gray-800\",\r\n  },\r\n  Meat: {\r\n    type: \"Meat\",\r\n    bgColor: \"bg-red-100\",\r\n    textColor: \"text-red-800\",\r\n  },\r\n  Sweets: {\r\n    type: \"Sweets\",\r\n    bgColor: \"bg-pink-100\",\r\n    textColor: \"text-pink-800\",\r\n  },\r\n  Cereals: {\r\n    type: \"Cereals\",\r\n    bgColor: \"bg-amber-100\",\r\n    textColor: \"text-amber-800\",\r\n  },\r\n};\r\n\r\nexport const getBadgeStyles = (badgeType: BadgeType): string => {\r\n  const badge = badges[badgeType];\r\n  return `${badge.bgColor} ${badge.textColor}`;\r\n};\r\n"],"names":[],"mappings":";;;;AA2BO,MAAM,SAAmC;IAC9C,SAAS;QACP,MAAM;QACN,SAAS;QACT,WAAW;IACb;IACA,OAAO;QACL,MAAM;QACN,SAAS;QACT,WAAW;IACb;IACA,QAAQ;QACN,MAAM;QACN,SAAS;QACT,WAAW;IACb;IACA,SAAS;QACP,MAAM;QACN,SAAS;QACT,WAAW;IACb;IACA,gBAAgB;QACd,MAAM;QACN,SAAS;QACT,WAAW;IACb;IACA,QAAQ;QACN,MAAM;QACN,SAAS;QACT,WAAW;IACb;IACA,WAAW;QACT,MAAM;QACN,SAAS;QACT,WAAW;IACb;IACA,aAAa;QACX,MAAM;QACN,SAAS;QACT,WAAW;IACb;IACA,OAAO;QACL,MAAM;QACN,SAAS;QACT,WAAW;IACb;IACA,OAAO;QACL,MAAM;QACN,SAAS;QACT,WAAW;IACb;IACA,OAAO;QACL,MAAM;QACN,SAAS;QACT,WAAW;IACb;IACA,QAAQ;QACN,MAAM;QACN,SAAS;QACT,WAAW;IACb;IACA,YAAY;QACV,MAAM;QACN,SAAS;QACT,WAAW;IACb;IACA,QAAQ;QACN,MAAM;QACN,SAAS;QACT,WAAW;IACb;IACA,UAAU;QACR,MAAM;QACN,SAAS;QACT,WAAW;IACb;IACA,OAAO;QACL,MAAM;QACN,SAAS;QACT,WAAW;IACb;IACA,MAAM;QACJ,MAAM;QACN,SAAS;QACT,WAAW;IACb;IACA,QAAQ;QACN,MAAM;QACN,SAAS;QACT,WAAW;IACb;IACA,SAAS;QACP,MAAM;QACN,SAAS;QACT,WAAW;IACb;AACF;AAEO,MAAM,iBAAiB,CAAC;IAC7B,MAAM,QAAQ,MAAM,CAAC,UAAU;IAC/B,OAAO,GAAG,MAAM,OAAO,CAAC,CAAC,EAAE,MAAM,SAAS,EAAE;AAC9C","debugId":null}},
    {"offset": {"line": 448, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/visah/Documents/GitHub/GrabDuo/src/app/wishlist/page.tsx"],"sourcesContent":["\"use client\";\n\nimport Link from \"next/link\";\nimport { useState, useEffect } from \"react\";\nimport { products, loadAllProducts, Product } from \"../products\";\nimport { getBadgeStyles } from \"../badge\";\nimport { useCart } from \"../cart/CartContext\";\n\nexport default function WishlistPage() {\n  const [newItemInput, setNewItemInput] = useState(\"\");\n  const [shoppingList, setShoppingList] = useState<string[]>([]);\n  const [isCurateMode, setIsCurateMode] = useState(false);\n  const [curatedProducts, setCuratedProducts] = useState<Product[]>([]);\n  const [toast, setToast] = useState<string>(\"\");\n  const [allProducts, setAllProducts] = useState<Product[]>(products);\n  const [isLoadingProducts, setIsLoadingProducts] = useState(true);\n  const [ocrOriginalText, setOcrOriginalText] = useState<string>(\"\");\n  const [showOcrText, setShowOcrText] = useState(false);\n  const [fromOcr, setFromOcr] = useState(false);\n  const { addItem, removeItem, updateQuantity, items } = useCart();\n\n  // Load all products when component mounts\n  useEffect(() => {\n    const loadProducts = async () => {\n      try {\n        const loadedProducts = await loadAllProducts();\n        setAllProducts(loadedProducts);\n      } catch (error) {\n        console.error('Failed to load all products:', error);\n        // Fallback to basic products on error\n        setAllProducts(products);\n      } finally {\n        setIsLoadingProducts(false);\n      }\n    };\n\n    loadProducts();\n  }, []);\n\n  // Check if navigated from OCR and load OCR data\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const isFromOcr = urlParams.get('from') === 'ocr';\n    \n    if (isFromOcr) {\n      setFromOcr(true);\n      \n      // Load OCR shopping items\n      const ocrItemsJson = localStorage.getItem('ocrShoppingItems');\n      if (ocrItemsJson) {\n        try {\n          const ocrItems: string[] = JSON.parse(ocrItemsJson);\n          setShoppingList(ocrItems);\n          \n          // Clear the localStorage data after loading\n          localStorage.removeItem('ocrShoppingItems');\n          \n          // Show success message\n          setTimeout(() => {\n            showToast(`‚úÖ Added ${ocrItems.length} items from your image to the shopping list!`);\n          }, 500);\n        } catch (error) {\n          console.error('Failed to parse OCR items:', error);\n        }\n      }\n      \n      // Load original OCR text\n      const originalText = localStorage.getItem('ocrOriginalText');\n      if (originalText) {\n        setOcrOriginalText(originalText);\n        setShowOcrText(true);\n        \n        // Clear the localStorage data after loading\n        localStorage.removeItem('ocrOriginalText');\n      }\n    }\n  }, []);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setNewItemInput(e.target.value);\n  };\n\n  const handleAddItem = () => {\n    if (newItemInput.trim()) {\n      setShoppingList(prev => [...prev, newItemInput.trim()]);\n      setNewItemInput(\"\");\n    }\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      handleAddItem();\n    }\n  };\n\n  const handleRemoveItem = (index: number) => {\n    setShoppingList(prev => prev.filter((_, i) => i !== index));\n  };\n\n  const handleClearInput = () => {\n    setNewItemInput(\"\");\n  };\n\n  const showToast = (message: string) => {\n    setToast(message);\n    setTimeout(() => setToast(\"\"), 3000);\n  };\n\n  // Enhanced confidence-based search function for curation\n  const enhancedCurationSearch = (products: Product[], shoppingItems: string[]): Product[] => {\n    if (shoppingItems.length === 0) return [];\n    \n    const allResults = new Map<number, { product: Product, confidence: number }>();\n    \n    shoppingItems.forEach(item => {\n      const keywords = item.toLowerCase().trim().split(/\\s+/).filter(keyword => keyword.length > 0);\n      if (keywords.length === 0) return;\n      \n      products.forEach(product => {\n        let totalScore = 0;\n        let maxPossibleScore = 0;\n        \n        // Define field weights (importance)\n        const fields = [\n          { content: product.name.toLowerCase(), weight: 40 }, // Name is most important\n          { content: product.brands?.toLowerCase() || '', weight: 25 }, // Brand is second\n          { content: product.badge.toLowerCase(), weight: 20 }, // Category is third\n          { content: product.categories?.toLowerCase() || '', weight: 10 }, // Categories\n          { content: product.unitQuantity?.toLowerCase() || '', weight: 3 }, // Quantity\n          { content: product.countries?.toLowerCase() || '', weight: 2 } // Countries least important\n        ];\n        \n        keywords.forEach(keyword => {\n          let keywordScore = 0;\n          let keywordMaxScore = 0;\n          \n          fields.forEach(field => {\n            if (!field.content) return;\n            \n            keywordMaxScore += field.weight;\n            \n            // Exact match in field (highest score)\n            if (field.content === keyword) {\n              keywordScore += field.weight * 1.0;\n            }\n            // Field starts with keyword (very high score)\n            else if (field.content.startsWith(keyword)) {\n              keywordScore += field.weight * 0.9;\n            }\n            // Field contains keyword as whole word (high score)\n            else if (field.content.includes(` ${keyword} `) || field.content.includes(`${keyword} `) || field.content.includes(` ${keyword}`)) {\n              keywordScore += field.weight * 0.8;\n            }\n            // Field contains keyword as substring (medium score)\n            else if (field.content.includes(keyword)) {\n              keywordScore += field.weight * 0.6;\n            }\n            // Fuzzy match - keyword contains part of field words or vice versa (low score)\n            else {\n              const fieldWords = field.content.split(/\\s+/).filter(word => word.length > 2);\n              const fuzzyMatch = fieldWords.some(word => {\n                // Check if keyword and word share significant overlap\n                if (keyword.length >= 3 && word.length >= 3) {\n                  return keyword.includes(word.slice(0, Math.min(3, word.length))) ||\n                         word.includes(keyword.slice(0, Math.min(3, keyword.length))) ||\n                         keyword.includes(word.slice(-3)) ||\n                         word.includes(keyword.slice(-3));\n                }\n                return false;\n              });\n              \n              if (fuzzyMatch) {\n                keywordScore += field.weight * 0.3;\n              }\n            }\n          });\n          \n          totalScore += keywordScore;\n          maxPossibleScore += keywordMaxScore;\n        });\n        \n        // Calculate confidence percentage\n        const confidence = maxPossibleScore > 0 ? (totalScore / maxPossibleScore) * 100 : 0;\n        \n        // Only consider products with >50% confidence\n        if (confidence > 50) {\n          const existing = allResults.get(product.id);\n          if (!existing || confidence > existing.confidence) {\n            allResults.set(product.id, { product, confidence });\n          }\n        }\n      });\n    });\n    \n    // Return products sorted by confidence descending\n    return Array.from(allResults.values())\n      .sort((a, b) => b.confidence - a.confidence)\n      .map(item => item.product);\n  };\n\n  const handleCurateShoppingList = () => {\n    if (shoppingList.length === 0) {\n      showToast(\"Please add items to your shopping list first!\");\n      return;\n    }\n\n    // Use enhanced search for better product matching\n    const matchedProducts = enhancedCurationSearch(allProducts, shoppingList);\n    setCuratedProducts(matchedProducts.slice(0, 20)); // Show top 20 results\n    setIsCurateMode(true);\n  };\n\n  const handleBackToList = () => {\n    setIsCurateMode(false);\n    setCuratedProducts([]);\n  };\n\n  const handleAddToCart = (product: any) => {\n    addItem(product);\n    showToast(`${product.name} added to cart!`);\n  };\n\n  const handleIncreaseQuantity = (product: any) => {\n    const cartItem = items.find(item => item.id === product.id);\n    if (cartItem) {\n      updateQuantity(product.id, cartItem.quantity + 1);\n    } else {\n      addItem(product);\n    }\n    showToast(`${product.name} quantity updated`);\n  };\n\n  const handleDecreaseQuantity = (product: any) => {\n    const cartItem = items.find(item => item.id === product.id);\n    if (cartItem) {\n      if (cartItem.quantity === 1) {\n        removeItem(product.id);\n        showToast(`${product.name} removed from cart`);\n      } else {\n        updateQuantity(product.id, cartItem.quantity - 1);\n        showToast(`${product.name} quantity updated`);\n      }\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-green-50 px-4 py-6\">\n      {/* Toast Notification */}\n      {toast && (\n        <div className=\"fixed top-4 left-1/2 transform -translate-x-1/2 z-50 animate-slide-down\">\n          <div className=\"bg-gray-800 text-white px-4 py-2 rounded-lg shadow-lg flex items-center gap-2\">\n            <svg className=\"w-4 h-4 text-green-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n            </svg>\n            <span className=\"text-sm\">{toast}</span>\n          </div>\n        </div>\n      )}\n\n      {/* Header */}\n      <div className=\"mb-6\">\n        <div className=\"flex items-center gap-2\">\n          <Link\n            href=\"/\"\n            className=\"p-1 hover:bg-green-100 rounded-lg transition-colors\"\n          >\n            <svg\n              className=\"w-6 h-6 text-green-600\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M15 19l-7-7 7-7\"\n              />\n            </svg>\n          </Link>\n          <h1 className=\"text-2xl font-bold text-gray-900\">\n            {isCurateMode ? \"Curated Products\" : \"Shopping List\"}\n          </h1>\n        </div>\n        \n        {/* OCR Success Banner */}\n        {fromOcr && (\n          <div className=\"mt-4 p-4 bg-gradient-to-r from-green-50 to-blue-50 border border-green-200 rounded-lg\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"flex-shrink-0\">\n                <svg className=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n              </div>\n              <div className=\"flex-1\">\n                <h3 className=\"font-semibold text-green-800\">‚ú® Items Added from Your Image!</h3>\n                <p className=\"text-sm text-green-700 mt-1\">\n                  We've automatically extracted and added items from your uploaded image to your shopping list.\n                </p>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {!isCurateMode ? (\n        <>\n          {/* Add Item Input */}\n          <div className=\"mb-6\">\n            <div className=\"relative\">\n              {shoppingList.length > 0 && (\n                <svg\n                  className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n                  />\n                </svg>\n              )}\n              <input\n                type=\"text\"\n                placeholder=\"Add new item to your shopping list...\"\n                value={newItemInput}\n                onChange={handleInputChange}\n                onKeyPress={handleKeyPress}\n                className={`w-full ${shoppingList.length > 0 ? 'pl-10' : 'pl-4'} pr-24 py-3 bg-white border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent text-gray-900 placeholder-gray-500`}\n              />\n              {newItemInput && (\n                <button\n                  onClick={handleClearInput}\n                  className=\"absolute right-12 top-1/2 transform -translate-y-1/2 p-1 hover:bg-gray-100 rounded-md transition-colors\"\n                  title=\"Clear input\"\n                >\n                  <svg\n                    className=\"w-4 h-4 text-gray-400 hover:text-gray-600\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M6 18L18 6M6 6l12 12\"\n                    />\n                  </svg>\n                </button>\n              )}\n              <button\n                onClick={handleAddItem}\n                className=\"absolute right-2 top-1/2 transform -translate-y-1/2 bg-green-600 text-white px-3 py-1.5 rounded-md hover:bg-green-700 transition-colors text-sm font-medium\"\n              >\n                Add\n              </button>\n            </div>\n          </div>\n\n          {/* Shopping List Items */}\n          {shoppingList.length > 0 ? (\n            <div className=\"space-y-3 mb-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\n                Your Items ({shoppingList.length})\n              </h3>\n              {shoppingList.map((item, index) => (\n                <div\n                  key={index}\n                  className=\"bg-white rounded-lg shadow-sm border border-gray-100 p-4 flex items-center justify-between hover:shadow-md transition-shadow\"\n                >\n                  <div className=\"flex items-center gap-3\">\n                    <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\n                    <span className=\"text-gray-900 font-medium\">{item}</span>\n                  </div>\n                  <button\n                    onClick={() => handleRemoveItem(index)}\n                    className=\"p-2 text-red-500 hover:bg-red-50 rounded-lg transition-colors\"\n                    title=\"Remove item\"\n                  >\n                    <svg\n                      className=\"w-4 h-4\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      viewBox=\"0 0 24 24\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1-1H8a1 1 0 00-1 1v3M4 7h16\"\n                      />\n                    </svg>\n                  </button>\n                </div>\n              ))}\n            </div>\n          ) : (\n            /* Empty State */\n            <div className=\"text-center py-16\">\n              <div className=\"text-gray-400 mb-4\">\n                <svg\n                  className=\"w-16 h-16 mx-auto mb-4\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={1.5}\n                    d=\"M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\"\n                  />\n                </svg>\n              </div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                Your shopping list is empty\n              </h3>\n              <p className=\"text-gray-600\">\n                Start adding items using the input box above to keep track of what you need.\n              </p>\n            </div>\n          )}\n\n          {/* OCR Text Display */}\n          {showOcrText && ocrOriginalText && (\n            <div className=\"mb-6 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n              <div className=\"flex items-start gap-3\">\n                <div className=\"flex-shrink-0\">\n                  <svg className=\"w-5 h-5 text-blue-600 mt-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                  </svg>\n                </div>\n                <div className=\"flex-1\">\n                  <h4 className=\"font-semibold text-blue-800 mb-2\">üì∏ Original Text from Your Image:</h4>\n                  <div className=\"text-sm text-blue-700 bg-white rounded p-3 border border-blue-200 max-h-40 overflow-y-auto\">\n                    {ocrOriginalText.split('\\n').map((line, index) => (\n                      <div key={index} className=\"mb-1\">\n                        {line.trim() || '\\u00A0'}\n                      </div>\n                    ))}\n                  </div>\n                  <button\n                    onClick={() => setShowOcrText(false)}\n                    className=\"mt-2 text-xs text-blue-600 hover:text-blue-800 underline\"\n                  >\n                    Hide original text\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Curate Shopping List Button */}\n          <div className=\"mt-8 text-center\">\n            <button \n              onClick={handleCurateShoppingList}\n              disabled={shoppingList.length === 0 || isLoadingProducts}\n              className={`inline-flex items-center gap-2 px-6 py-3 rounded-lg transition-colors font-medium ${\n                shoppingList.length === 0 || isLoadingProducts\n                  ? 'bg-gray-300 text-gray-500 cursor-not-allowed' \n                  : 'bg-green-600 text-white hover:bg-green-700'\n              }`}\n            >\n              {isLoadingProducts ? (\n                <>\n                  <svg className=\"animate-spin h-5 w-5\" viewBox=\"0 0 24 24\">\n                    <circle\n                      className=\"opacity-25\"\n                      cx=\"12\"\n                      cy=\"12\"\n                      r=\"10\"\n                      stroke=\"currentColor\"\n                      strokeWidth=\"4\"\n                      fill=\"none\"\n                    />\n                    <path\n                      className=\"opacity-75\"\n                      fill=\"currentColor\"\n                      d=\"M4 12a8 8 0 018-8v8H4z\"\n                    />\n                  </svg>\n                  Loading Products...\n                </>\n              ) : (\n                <>\n                  <svg\n                    className=\"w-5 h-5\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\"\n                    />\n                  </svg>\n                  Curate Shopping List\n                </>\n              )}\n            </button>\n            \n            {/* Show product count when loaded */}\n            {!isLoadingProducts && (\n              <div className=\"mt-2 text-sm text-gray-600\">\n                Ready to curate from {allProducts.length.toLocaleString()} products\n              </div>\n            )}\n          </div>\n        </>\n      ) : (\n        /* Curated Products View */\n        <div>\n          {/* Back Button */}\n          <div className=\"mb-6\">\n            <button\n              onClick={handleBackToList}\n              className=\"inline-flex items-center gap-2 text-blue-600 hover:text-blue-700 font-medium\"\n            >\n              <svg\n                className=\"w-5 h-5\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M15 19l-7-7 7-7\"\n                />\n              </svg>\n              Back to Shopping List\n            </button>\n          </div>\n\n          {/* Curated Products */}\n          {curatedProducts.length > 0 ? (\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\n                Recommended Products ({curatedProducts.length})\n              </h3>\n              <p className=\"text-gray-600 mb-6\">\n                Based on your shopping list, we found these matching products:\n              </p>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\n                {curatedProducts.map((product) => (\n                  <div\n                    key={product.id}\n                    className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-4 hover:shadow-md transition-shadow\"\n                  >\n                    <div className=\"flex items-center gap-4\">\n                      {/* Product Visual */}\n                      <div\n                        className={`w-16 h-16 bg-gradient-to-br ${product.color} rounded-xl flex items-center justify-center flex-shrink-0`}\n                      >\n                        <div className=\"text-2xl\">\n                          {product.icon}\n                        </div>\n                      </div>\n\n                      {/* Product Details */}\n                      <div className=\"flex-1\">\n                        <div className=\"flex items-start justify-between\">\n                          <div>\n                            <h4 className=\"font-semibold text-gray-900 text-lg mb-2\">\n                              {product.name}\n                            </h4>\n                            <span\n                              className={`inline-block px-2 py-1 text-xs font-medium rounded-full ${getBadgeStyles(product.badge)}`}\n                            >\n                              {product.badge}\n                            </span>\n                          </div>\n                          <div className=\"text-right\">\n                            <span className=\"font-bold text-green-600 text-xl\">\n                              {product.price}\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n\n                      {/* Quantity Controls */}\n                      {(() => {\n                        const cartItem = items.find(item => item.id === product.id);\n                        const quantity = cartItem ? cartItem.quantity : 0;\n                        \n                        if (quantity === 0) {\n                          return (\n                            <button\n                              onClick={() => handleIncreaseQuantity(product)}\n                              className=\"flex items-center gap-2 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors font-medium\"\n                              title=\"Add to cart\"\n                            >\n                              <svg\n                                className=\"w-5 h-5\"\n                                fill=\"none\"\n                                stroke=\"currentColor\"\n                                viewBox=\"0 0 24 24\"\n                              >\n                                <path\n                                  strokeLinecap=\"round\"\n                                  strokeLinejoin=\"round\"\n                                  strokeWidth={2}\n                                  d=\"M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z\"\n                                />\n                              </svg>\n                              <span className=\"text-sm\">Add</span>\n                            </button>\n                          );\n                        }\n                        \n                        return (\n                          <div className=\"flex items-center gap-1 bg-gray-50 rounded-lg p-1\">\n                            <button\n                              onClick={() => handleDecreaseQuantity(product)}\n                              className=\"w-7 h-7 flex items-center justify-center bg-green-100 text-green-700 rounded-md hover:bg-green-200 transition-colors flex-shrink-0\"\n                              title=\"Decrease quantity\"\n                            >\n                              <svg\n                                className=\"w-3 h-3\"\n                                fill=\"none\"\n                                stroke=\"currentColor\"\n                                viewBox=\"0 0 24 24\"\n                              >\n                                <path\n                                  strokeLinecap=\"round\"\n                                  strokeLinejoin=\"round\"\n                                  strokeWidth={3}\n                                  d=\"M20 12H4\"\n                                />\n                              </svg>\n                            </button>\n                            <span className=\"px-2 py-1 text-gray-900 font-bold text-sm min-w-[28px] text-center flex-shrink-0\">\n                              {quantity}\n                            </span>\n                            <button\n                              onClick={() => handleIncreaseQuantity(product)}\n                              className=\"w-7 h-7 flex items-center justify-center bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors flex-shrink-0\"\n                              title=\"Increase quantity\"\n                            >\n                              <svg\n                                className=\"w-3 h-3\"\n                                fill=\"none\"\n                                stroke=\"currentColor\"\n                                viewBox=\"0 0 24 24\"\n                              >\n                                <path\n                                  strokeLinecap=\"round\"\n                                  strokeLinejoin=\"round\"\n                                  strokeWidth={3}\n                                  d=\"M12 4v16m8-8H4\"\n                                />\n                              </svg>\n                            </button>\n                          </div>\n                        );\n                      })()}\n                    </div>\n                  </div>\n                                  ))}\n                </div>\n                \n                {/* Go to Cart Button */}\n                {items.length > 0 && (\n                  <div className=\"text-center\">\n                    <Link\n                      href=\"/cart\"\n                      className=\"inline-flex items-center gap-2 bg-green-600 text-white px-6 py-3 rounded-lg hover:bg-green-700 transition-colors font-medium\"\n                    >\n                      <svg\n                        className=\"w-5 h-5\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        viewBox=\"0 0 24 24\"\n                      >\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth={2}\n                          d=\"M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z\"\n                        />\n                      </svg>\n                      Go to Cart\n                      {items.length > 0 && (\n                        <span className=\"bg-green-500 text-white text-xs font-bold px-2 py-1 rounded-full\">\n                          {items.reduce((total, item) => total + item.quantity, 0)}\n                        </span>\n                      )}\n                    </Link>\n                  </div>\n                )}\n              </div>\n          ) : (\n            /* No Matches Found */\n            <div className=\"text-center py-16\">\n              <div className=\"text-gray-400 mb-4\">\n                <svg\n                  className=\"w-16 h-16 mx-auto mb-4\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={1.5}\n                    d=\"M9.172 16.172a4 4 0 015.656 0M9 12h6m-3-3v6m-9 1V7a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z\"\n                  />\n                </svg>\n              </div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                No matching products found\n              </h3>\n              <p className=\"text-gray-600 mb-6\">\n                We couldn't find products matching your shopping list items. Try browsing our catalog or modify your shopping list.\n              </p>\n              <div className=\"flex gap-4 justify-center\">\n                <button\n                  onClick={handleBackToList}\n                  className=\"bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors font-medium\"\n                >\n                  Back to Shopping List\n                </button>\n                <Link\n                  href=\"/\"\n                  className=\"bg-green-600 text-white px-6 py-3 rounded-lg hover:bg-green-700 transition-colors font-medium\"\n                >\n                  Browse Products\n                </Link>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}}]
}